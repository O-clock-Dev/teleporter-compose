networks:
  oclock:
    ipam:
      driver: default
      config:
        - subnet: 10.200.0.0/16
          ip_range: 10.200.0.0/16
          gateway: 10.200.0.1

services:
## Infrastructure
  vpn:
    container_name: teleporter-vpn
    env_file: 
      - vpn.env
      - .env
    build:
      context: ./containers/ssh
    restart: always
    hostname: "${GITHUB_PSEUDO:-johndoe}-vpn"
    cap_add:
      - NET_ADMIN
    ports:
      - "${VPN_LOCAL_PORT}:${VPN_LOCAL_PORT}/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD","ping","-c1","${VPN_PRIV_IP}","-w1"]
      interval: 5s
      retries: 5
      start_period: 10s
    labels:
      autoheal: True
    networks:
      oclock:
        ipv4_address: ${VPN_LOCAL_IP}
  autoheal:
    container_name: teleporter-autoheal
    hostname: teleporter-autoheal
    restart: always
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  reverse_proxy:
    container_name: teleporter-haproxy
    build:
      context: ./containers/haproxy
    hostname: "${GITHUB_PSEUDO:-johndoe}-haproxy"
    ports:
      - "80:80"
    networks:
      oclock:
        ipv4_address: 10.200.0.200
  proxy:
    container_name: teleporter-proxy
    hostname: teleporter-proxy
    image: lthn/dante
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - 2020:2020
    command: ["sh","-c","ip route add ${VPN_NETWORK} via ${VPN_LOCAL_IP} && exec sockd -N 2"]
    dns:
      - "10.0.0.1"
    networks:
      oclock:
        ipv4_address: 10.200.0.220

  squid:
    hostname: teleporter-squid
    container_name: teleporter-squid
    build:
      context: ./containers/squid
    dns:
      - "10.0.0.1"
    cap_add:
      - NET_ADMIN
    restart: always
    ports:
      - 3128:3128
    networks:
      oclock:
        ipv4_address: 10.200.0.221

  dock:
    container_name: teleporter-dock
    build:
      context: ./containers/ssh
    restart: always
    hostname: "${GITHUB_PSEUDO:-johndoe}-dock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    cap_add:
      - NET_ADMIN
    ports:
      - 22:22
    networks:
      oclock:
        ipv4_address: 10.200.0.222
    command: ["sh","-c","ip route add ${VPN_NETWORK} via ${VPN_LOCAL_IP} && exec /usr/sbin/sshd -D -f /etc/ssh/sshd_config -e -o PermitRootLogin=yes"]
## Utils
  filebrowser:
    container_name: teleporter-filebrowser
    hostname: teleporter-filebrowser
    build:
      context: ./containers/filebrowser
    volumes:
      - "${CODE_DIR}:/srv/"
    networks:
      oclock:
        ipv4_address: 10.200.0.201
  terminal:
    environment:
    - TZ=${TZ}
    hostname: teleporter-terminal
    container_name: teleporter-terminal
    build:
      context: ./containers/terminal
    ports:
      - 81:7681
    networks:
      oclock:
        ipv4_address: 10.200.0.202
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
## Web server
  web1:
    environment:
    - LANG=${LANG}
    - TZ=${TZ}
    image: caddy:alpine
    hostname: teleporter-web1
    container_name: teleporter-web1
#    ports:
#      - "80:80"
    networks:
      oclock:
        ipv4_address: 10.200.0.10
    volumes:
      - "${WEB_PUBLIC_DIR}:/usr/share/caddy/"
#  docker:
#    image: mondocker
#    command: sleep infinity
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock
