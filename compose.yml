networks:
  oclock:
    ipam:
      driver: default
      config:
        - subnet: 10.200.0.0/16
          ip_range: 10.200.0.0/16
          gateway: 10.200.0.1

services:
## Dashboard
  homepage:
    image: ghcr.io/gethomepage/homepage:latest
    container_name: teleporter-homepage
    hostname: teleporter-homepage
    volumes:
      - ./data/configs/homepage:/app/config
      - ./data/configs/homepage/images:/app/public/images
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      oclock:
        ipv4_address: 10.200.0.203
## Infrastructure
  vpn:
    container_name: teleporter-vpn
    env_file: 
      - vpn.env
      - .env
    build:
      context: ./containers-config/ssh
    restart: always
    hostname: "${GITHUB_PSEUDO:-johndoe}-vpn"
    cap_add:
      - NET_ADMIN
    ports:
      - "${VPN_LOCAL_PORT}:${VPN_LOCAL_PORT}/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    healthcheck:
      test: ["CMD","ping","-c1","${VPN_PRIV_IP}","-w1"]
      interval: 5s
      retries: 5
      start_period: 10s
    labels:
      autoheal: True
    networks:
      oclock:
        ipv4_address: ${VPN_LOCAL_IP}
  autoheal:
    container_name: teleporter-autoheal
    hostname: teleporter-autoheal
    restart: always
    image: willfarrell/autoheal
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  reverse_proxy:
    container_name: teleporter-haproxy
    build:
      context: ./containers-config/haproxy
    hostname: "${GITHUB_PSEUDO:-johndoe}-haproxy"
    ports:
      - "80:80"
    networks:
      oclock:
        ipv4_address: 10.200.0.200
  proxy:
    container_name: teleporter-proxy
    hostname: teleporter-proxy
    image: lthn/dante
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - 2020:2020
    command: ["sh","-c","ip route add ${VPN_NETWORK} via ${VPN_LOCAL_IP} && exec sockd -N 2"]
    dns:
      - "10.0.0.1"
    networks:
      oclock:
        ipv4_address: 10.200.0.220

  squid:
    hostname: teleporter-squid
    container_name: teleporter-squid
    build:
      context: ./containers-config/squid
    dns:
      - "10.0.0.1"
    cap_add:
      - NET_ADMIN
    restart: always
    ports:
      - 3128:3128
    networks:
      oclock:
        ipv4_address: 10.200.0.221

  dock:
    container_name: teleporter-dock
    build:
      context: ./containers-config/ssh
    restart: always
    hostname: "${GITHUB_PSEUDO:-johndoe}-dock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    cap_add:
      - NET_ADMIN
    ports:
      - 22:22
    networks:
      oclock:
        ipv4_address: 10.200.0.222
    command: ["sh","-c","ip route add ${VPN_NETWORK} via ${VPN_LOCAL_IP} && exec /usr/sbin/sshd -D -f /etc/ssh/sshd_config -e -o PermitRootLogin=yes"]
## Utils
  filebrowser:
    restart: always
    container_name: teleporter-filebrowser
    hostname: teleporter-filebrowser
    build:
      context: ./containers-config/filebrowser
    volumes:
      - "${CODE_DIR}:/srv/code"
      - "${DATA_DIR}:/srv/data"
    environment:
      - FB_NOAUTH=true
    networks:
      oclock:
        ipv4_address: 10.200.0.201
  terminal:
    environment:
    - TZ=${TZ}
    hostname: teleporter-terminal
    container_name: teleporter-terminal
    build:
      context: ./containers-config/terminal
    ports:
      - 81:7681
    networks:
      oclock:
        ipv4_address: 10.200.0.202
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
## Web server
  caddyserver:
    environment:
    - LANG=${LANG}
    - TZ=${TZ}
    image: caddy:alpine
    hostname: teleporter-caddyserver
    container_name: teleporter-caddyserver
    ports:
      - "8080:80"
    networks:
      oclock:
        ipv4_address: 10.200.0.10
    volumes:
      - "${CODE_DIR}/www/public:/usr/share/caddy/"
## MariaDB, Adminer and phpmyadmin
  mariaDB:
    image: mariadb:11.3.2
    hostname: teleporter-mariaDB
    container_name: teleporter-mariaDB
    environment:
    - LANG=${LANG}
    - TZ=${TZ}
    - MARIADB_ROOT_PASSWORD=root
    #- MARIADB_USER=explorateur
    #- MARIADB_PASSWORD=6q595XmCKm
    healthcheck:
      interval: 10s
      retries: 5
      test:
        [
          "CMD",
          "healthcheck.sh",
          "--su-mysql",
          "--connect",
          "--innodb_initialized"
        ]
      timeout: 30s
    networks:
      oclock:
        ipv4_address: 10.200.0.11
    volumes:
      - ${DATA_DIR}/mysql:/var/lib/mysql
      - ./containers-config/mariadb/explorateur.sql:/docker-entrypoint-initdb.d/explorateur.sql
  adminer:
    image: adminer:4.8.1
    depends_on:
      mariaDB:
        condition: service_healthy
    hostname: teleporter-adminer 
    container_name: teleporter-adminer
    environment:
      - ADMINER_DEFAULT_SERVER=mariadb
      - ADMINER_DESIGN=dracula
    networks:
      oclock:
        ipv4_address: 10.200.0.12
  phpmyadmin:
    hostname: teleporter-phpmyadmin
    container_name: teleporter-phpmyadmin
    build:
      context: ./containers-config/phpmyadmin                                   
    depends_on:
      mariaDB:
        condition: service_healthy
    restart: always
    environment:
      - PMA_HOST=mariadb
    networks:
      oclock:
        ipv4_address: 10.200.0.13
## vscode
  vscode-server:
    hostname: teleporter-vscode
    container_name: teleporter-vscode
    image: linuxserver/code-server:4.21.2
    environment:
      - TZ=${TZ}
      - LANG=${LANG}
      - DOCKER_MODS=linuxserver/mods:code-server-extension-arguments
      - VSCODE_EXTENSION_IDS=${VSCODE_EXTENSIONS_LIST}
      - DEFAULT_WORKSPACE=/code
    volumes:
      - ${DATA_DIR}/configs/vscode:/config
      - ${CODE_DIR}:/code
    networks:
      oclock:
        ipv4_address: 10.200.0.14