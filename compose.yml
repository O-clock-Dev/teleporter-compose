
services:
  vpn:
    env_file: 
      - vpn.env
      - .env
    image: monwg
    hostname: "${GITHUB_PSEUDO:-johndoe}-vpn"
    cap_add:
      - NET_ADMIN
    ports:
      - "${VPN_LOCAL_PORT}:${VPN_LOCAL_PORT}/udp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      oclock:
        ipv4_address: ${VPN_LOCAL_IP}
  reverse_proxy:
    image: monhaproxy
    hostname: "${GITHUB_PSEUDO:-johndoe}-haproxy"
    ports:
      - "80:80"
    networks:
      oclock:
        ipv4_address: 10.200.0.200

  filebrowser:
    image: monexplorer
    volumes:
      - "${CODE_DIR}:/srv/"
    networks:
      oclock:
        ipv4_address: 10.200.0.201
    
  proxy:
    image: lthn/dante
    restart: always
    cap_add:
      - NET_ADMIN
    ports:
      - 2020:2020
    command: ["sh","-c","ip route add ${VPN_NETWORK} via ${VPN_LOCAL_IP} && exec sockd -N 2"]
    networks:
      oclock:
        ipv4_address: 10.200.0.220
    
  dock:
    image: mondock
    restart: always
    hostname: "${GITHUB_PSEUDO:-johndoe}-dock"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    cap_add:
      - NET_ADMIN
    ports:
      - 22:22
    networks:
      oclock:
        ipv4_address: 10.200.0.222
    command: ["sh","-c","ip route add ${VPN_NETWORK} via ${VPN_LOCAL_IP} && exec /usr/sbin/sshd -D -f /etc/ssh/sshd_config -e -o PermitRootLogin=yes"]

  web1:
    image: caddy:alpine
    hostname: web1
#    ports:
#      - "80:80"
    networks:
      oclock:
        ipv4_address: 10.200.0.10
    volumes:
      - "${WEB_PUBLIC_DIR}:/usr/share/caddy/"
#  docker:
#    image: mondocker
#    command: sleep infinity
#    volumes:
#      - /var/run/docker.sock:/var/run/docker.sock

networks:
  oclock:
    ipam:
      driver: default
      config:
        - subnet: 10.200.0.0/16
          ip_range: 10.200.0.0/16
          gateway: 10.200.0.1
