# Teleporter App Containers

services:

  # VSCode
  vscode-server:
    container_name: teleporter-vscode
    hostname: teleporter-vscode
    image: linuxserver/code-server:4.21.2
    environment:
      PUID: 0
      PGID: 0
      TZ: ${TZ}
      LANG: ${LANG}
      DOCKER_MODS: linuxserver/mods:code-server-extension-arguments
      VSCODE_EXTENSION_IDS: ${VSCODE_EXTENSIONS_LIST}
      DEFAULT_WORKSPACE: /code
    volumes:
      - ${DATA_DIR}/configs/vscode:/config
      - ${CODE_DIR}:/code
    networks:
      oclock:
        ipv4_address: 10.200.0.14

  # WebServer
  caddyserver:
    container_name: teleporter-caddyserver
    hostname: teleporter-caddyserver
    image: caddy:2.7.6
    environment:
      LANG: ${LANG}
      TZ: ${TZ}
    healthcheck: # https://stackoverflow.com/a/47722899/5008962
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:2019/metrics", "||", "exit", "1"]
      interval: 1m30s
      timeout: 10s
      retries: 3
      start_period: 20s
    volumes:
      - "${CODE_DIR}/www/public:/usr/share/caddy/"
      - "${DATA_DIR}/caddyserver/data:/data"
      - "${DATA_DIR}/caddyserver/config:/config"
      - ./containers-config/caddyserver/Caddyfile:/etc/caddy/Caddyfile
    networks:
      oclock:
        ipv4_address: 10.200.0.10

  # Backup
  backup:
    container_name: teleporter-backup
    hostname: teleporter-backup
    image: ubuntu:latest
    environment:
      TZ: ${TZ}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
        - ./backup:/backup
        - ./containers-config/backup:/scripts
    command: /scripts/backup.sh
    networks:
      oclock:
        ipv4_address: 10.200.0.132
    depends_on:
        - mariaDB
        - postgreSQL
        - mongodb

  # DBMS Access Adminer
  adminer:
    container_name: teleporter-adminer
    hostname: teleporter-adminer
    image: adminer:4.8.1
    environment:
      ADMINER_DEFAULT_SERVER: mariadb
      ADMINER_DESIGN: dracula
    networks:
      oclock:
        ipv4_address: 10.200.0.12
    depends_on:
      mariaDB:
        condition: service_healthy

  # DBMS Access PHPmyAdmin
  phpmyadmin:
    container_name: teleporter-phpmyadmin
    hostname: teleporter-phpmyadmin
    image: oclock/teleporter-phpmyadmin:latest
    environment:
      PMA_HOST: mariadb
      PMA_USER: root
      PMA_PASSWORD: root
    restart: always
    networks:
      oclock:
        ipv4_address: 10.200.0.13
    depends_on:
      mariaDB:
        condition: service_healthy

  # DBMS Access MongoExpress
  mongo-express:
    # Be careful, the documentation on Docker Hub is outdated, use this one instead :
    # https://github.com/mongo-express/mongo-express?tab=readme-ov-file#usage-docker
    container_name: teleporter-mongo-express
    hostname: teleporter-mongo-express
    image: mongo-express:1.0.2-20-alpine3.19
    environment:
      LANG: ${LANG}
      TZ: ${TZ}
      ME_CONFIG_MONGODB_URL: mongodb://root:root@mongodb:27017/
      ME_CONFIG_MONGODB_ENABLE_ADMIN: true
      ME_CONFIG_BASICAUTH: false
      ME_CONFIG_SITE_BASEURL: /mongo-express/
    networks:
      oclock:
        ipv4_address: 10.200.0.16

  # DBMS MariaDB
  mariaDB:
    container_name: teleporter-mariaDB
    hostname: teleporter-mariaDB
    image: mariadb:11.3.2
    environment:
      LANG: ${LANG}
      TZ: ${TZ}
      MARIADB_ROOT_PASSWORD: ${MARIADB_ROOT_PASSWORD}
    volumes:
      - mariadb_data:/var/lib/mysql
      - ./containers-config/mariadb/explorateur.sql:/docker-entrypoint-initdb.d/explorateur.sql
    healthcheck:
      interval: 10s
      retries: 5
      test: ["CMD", "healthcheck.sh", "--su-mysql", "--connect", "--innodb_initialized"]
      timeout: 30s
    networks:
      oclock:
        ipv4_address: 10.200.0.11

  # DBMS MongoDB
  mongodb:
    container_name: teleporter-mongodb
    hostname: teleporter-mongodb
    image: mongo:7.0
    environment:
      LANG: ${LANG}
      TZ: ${TZ}
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_INITDB_ROOT_USERNAME}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_INITDB_ROOT_PASSWORD}
    networks:
      oclock:
        ipv4_address: 10.200.0.15

  # DBMS PostgreSQL
  postgreSQL:
    container_name: teleporter-postgres
    hostname: teleporter-postgres
    image: postgres:16.2
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    restart: always
    shm_size: 128mb
    networks:
      oclock:
        ipv4_address: 10.200.0.17

  pgadmin:
    image: dpage/pgadmin4:8.5
    depends_on:
      - postgreSQL
    hostname: teleporter-pgadmin4
    container_name: teleporter-pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: postgres@oclock.io
      PGADMIN_DEFAULT_PASSWORD: ${POSTGRES_PASSWORD}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ${CONFIG_DIR}/pgadmin4/servers.json:/pgadmin4/servers.json
    networks:
      oclock:
        ipv4_address: 10.200.0.18

  # PHP
  php:
    container_name: teleporter-php
    hostname: teleporter-php
    image: php:8.3-fpm-alpine
    volumes:
      - "${CODE_DIR}/www/public:/usr/share/caddy/"
    networks:
      oclock:
        ipv4_address: 10.200.0.20
